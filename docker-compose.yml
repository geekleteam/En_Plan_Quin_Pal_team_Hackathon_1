version: '3.9'

services:
  db:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - PGDATA=/data/postgres
      - POSTGRES_DB=medusa-G5-S
      - PGUSER=${DATABASE_USER}
    volumes:
      - ./db:/data/postgres
      - ./dumps/dumpfile.sql:/docker-entrypoint-initdb.d/init-user-db.sql:ro
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
  backend:
    build: geekle_ia
    ports:
      - "9000:9000"
      - "7001:7001"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@db:5432
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - STORE_CORS=/http://.+/
      - ADMIN_CORS=http://127.0.0.1:8000, http://127.0.0.1:9000,http://127.0.0.1:7001,http://127.0.0.1:8000,http://127.0.0.1:7001,http://127.0.0.1:9000,
      - DATABASE_TYPE=postgres
      - DATABASE_NAME=medusa-G5-S
      - MEDUSA_ADMIN_ONBOARDING_TYPE=nextjs
      - MEDUSA_ADMIN_ONBOARDING_NEXTJS_DIRECTORY=geekle_ia_storefront
  front:
    build: geekle_ia_storefront
    ports:
      - "8000:8000"
    environment:
      - MEDUSA_BACKEND_URL=http://backend:9000
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=http://127.0.0.1:9000
      - NEXT_PUBLIC_BASE_URL=http://127.0.0.1:8000
    depends_on:
      - backend

